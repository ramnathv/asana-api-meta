<%
var thisType = snake(classify(resource.name))

function paramNameInComment(param) {
  return param.required ? param.name : ('[' + param.name + ']');
}
%># DO NOT EDIT MANUALLY - This file is autogenerated from Asana API Specs
#' <%= classify(resource.name) %>
#'
#'
<%= prefix(resource.comment, "#'  ", false)%>
#' @name asn_<%= thisType %>
#' @rdname asn_<%= thisType %>
#' @family <%= thisType %>
#' @seealso \link{https://asana.com/developers/api-reference/<%= thisType %>}
NULL
<% _.forEach(resource.actions, function(action) {
    if (action.no_code) {
      return;
    }

    var name = snake(action.name);
    var method = action.method.toLowerCase();
    // if (action.collection) {
    //  method += "_collection";
    //}

    var extraParam = null;
    if (action.method === "GET") {
      extraParam = {
        name: '...',
        type: 'Object',
        comment: 'Parameters for the request'
      };
    } else if (action.method !== 'DELETE') {
      extraParam = {
        name: '...',
        type: 'Object',
        comment: 'Data for the request'
      };
    }
    var params = paramsForAction(action);
    var pathParamNames = params.pathParams.map(function(param) { return snake(param.name); });
    var explicitParams = params.pathParams.concat(params.explicitNonPathParams).concat(extraParam ? [extraParam] : []);
    //var documentedParams = explicitParams.concat(params.optionParams);
%>
<%= prefix(action.comment, "#' ", false) %>
<% _.forEach(explicitParams, function(param) { %>#'
<%= prefix(param.name + '  {' + typeName(param.type) + "} " +
          param.comment, "#' @param ", false) %><% }); %><%_.forEach(params.optionParams, function(param) {%>
<%= prefix(paramNameInComment(param) + ' : {' + typeName(param.type) + "} " +
            param.comment, "#'    ", false) %><%});%>
#' @export
#' @family <%= thisType %>
asn_<%= thisType %>_<%= name %> = function(<%= pathParamNames.concat([""]).join(", ") %>..., options = list(), .token = Sys.getenv('ASANA_ACCESS_TOKEN')){
<% if (pathParamNames.length > 0) { 
%>  path = sprintf(<%= JSON.stringify(action.path) %>, <%= pathParamNames.join(", ")%>)
<% } else { 
%>  path =  <%= JSON.stringify(action.path) %>
<% } 
%>  asn_<%= method %>(endpoint = path, ..., options = options)
}

<% }); %>
